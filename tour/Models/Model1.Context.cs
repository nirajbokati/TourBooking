//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tour.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TourBookingEntities2 : DbContext
    {
        public TourBookingEntities2()
            : base("name=TourBookingEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblBooking> tblBookings { get; set; }
        public virtual DbSet<tblDayActivity> tblDayActivities { get; set; }
        public virtual DbSet<tblGallery> tblGalleries { get; set; }
        public virtual DbSet<tblPackage> tblPackages { get; set; }
        public virtual DbSet<tblReview> tblReviews { get; set; }
    
        public virtual ObjectResult<DbBookingSelect_Result> DbBookingSelect(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbBookingSelect_Result>("DbBookingSelect", userNameParameter);
        }
    
        public virtual ObjectResult<DbDayActivitySelect_Result> DbDayActivitySelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbDayActivitySelect_Result>("DbDayActivitySelect");
        }
    
        public virtual ObjectResult<DbDayActivitySelectPac_Result> DbDayActivitySelectPac(Nullable<int> tour_Id)
        {
            var tour_IdParameter = tour_Id.HasValue ?
                new ObjectParameter("Tour_Id", tour_Id) :
                new ObjectParameter("Tour_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbDayActivitySelectPac_Result>("DbDayActivitySelectPac", tour_IdParameter);
        }
    
        public virtual ObjectResult<DbGallerySelect_Result> DbGallerySelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbGallerySelect_Result>("DbGallerySelect");
        }
    
        public virtual ObjectResult<DbGallerySelectPac_Result> DbGallerySelectPac(Nullable<int> tour_Id)
        {
            var tour_IdParameter = tour_Id.HasValue ?
                new ObjectParameter("Tour_Id", tour_Id) :
                new ObjectParameter("Tour_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbGallerySelectPac_Result>("DbGallerySelectPac", tour_IdParameter);
        }
    
        public virtual ObjectResult<DbPackageSelect_Result> DbPackageSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbPackageSelect_Result>("DbPackageSelect");
        }
    
        public virtual ObjectResult<DbPackageSelectPac_Result> DbPackageSelectPac(Nullable<int> tour_Id)
        {
            var tour_IdParameter = tour_Id.HasValue ?
                new ObjectParameter("Tour_Id", tour_Id) :
                new ObjectParameter("Tour_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbPackageSelectPac_Result>("DbPackageSelectPac", tour_IdParameter);
        }
    
        public virtual ObjectResult<DbRevieSelect_Result> DbRevieSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbRevieSelect_Result>("DbRevieSelect");
        }
    
        public virtual ObjectResult<DbReviewSelectPac_Result> DbReviewSelectPac(Nullable<int> tour_Id)
        {
            var tour_IdParameter = tour_Id.HasValue ?
                new ObjectParameter("Tour_Id", tour_Id) :
                new ObjectParameter("Tour_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbReviewSelectPac_Result>("DbReviewSelectPac", tour_IdParameter);
        }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
